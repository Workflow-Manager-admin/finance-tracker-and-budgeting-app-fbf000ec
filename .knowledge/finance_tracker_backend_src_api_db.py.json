{"is_source_file": true, "format": "Python", "description": "This file contains SQLAlchemy ORM models for 'User' and 'Transaction', session management functions, and database initialization logic for the Finance Tracker backend.", "external_files": [".env"], "external_methods": ["load_dotenv", "create_engine", "sessionmaker", "declarative_base"], "published": ["get_db", "init_db"], "classes": [{"name": "UserORM", "description": "ORM model representing a user, including user_id, username, email, hashed_password, and related transactions."}, {"name": "TransactionORM", "description": "ORM model representing a financial transaction, including amount, currency, category, type, date, description, and user relationship."}], "methods": [{"name": "Generator[Session,None,None] get_db()", "description": "Provides a database session for dependency injection, ensuring proper session closing.", "scope": "", "scopeKind": ""}, {"name": "init_db()", "description": "Initializes the database by creating all tables if they do not exist.", "scope": "", "scopeKind": ""}], "calls": ["load_dotenv()", "create_engine()", "sessionmaker()", "declarative_base()", "Base.metadata.create_all()"], "search-terms": ["SQLAlchemy ORM models", "UserORM", "TransactionORM", "init_db", "get_db", "Database configuration"], "state": 2, "file_id": 15, "knowledge_revision": 41, "git_revision": "", "revision_history": [{"33": ""}, {"41": ""}], "ctags": [{"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^Base = declarative_base()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^DATABASE_URL = os.environ.get(\"DATABASE_URL\", \"sqlite:\\/\\/\\/.\\/finance_tracker.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "TransactionORM", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^class TransactionORM(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserORM", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^class UserORM(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    __tablename__ = \"transactions\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "TransactionORM", "scopeKind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    __tablename__ = \"users\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "UserORM", "scopeKind": "class"}, {"_type": "tag", "name": "amount", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    amount = Column(Float, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "TransactionORM", "scopeKind": "class"}, {"_type": "tag", "name": "category", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    category = Column(String, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "TransactionORM", "scopeKind": "class"}, {"_type": "tag", "name": "currency", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    currency = Column(String, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "TransactionORM", "scopeKind": "class"}, {"_type": "tag", "name": "date", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    date = Column(DateTime, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "TransactionORM", "scopeKind": "class"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    description = Column(String, nullable=True)$/", "language": "Python", "kind": "variable", "scope": "TransactionORM", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    email = Column(String, unique=True, index=True, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "UserORM", "scopeKind": "class"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^engine = create_engine(DATABASE_URL, connect_args={\"check_same_thread\": False} if DATABASE_URL.s/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^def get_db() -> Generator[Session, None, None]:$/", "language": "Python", "typeref": "typename:Generator[Session,None,None]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "hashed_password", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    hashed_password = Column(String, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "UserORM", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    id = Column(String, primary_key=True, default=lambda: str(uuid.uuid4()), unique=True, index=/", "language": "Python", "kind": "variable", "scope": "TransactionORM", "scopeKind": "class"}, {"_type": "tag", "name": "init_db", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^def init_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "transactions", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    transactions = relationship(\"TransactionORM\", back_populates=\"user\", cascade=\"all, delete-or/", "language": "Python", "kind": "variable", "scope": "UserORM", "scopeKind": "class"}, {"_type": "tag", "name": "type", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    type = Column(String, nullable=False)  # \"income\" or \"expense\"$/", "language": "Python", "kind": "variable", "scope": "TransactionORM", "scopeKind": "class"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    user = relationship(\"UserORM\", back_populates=\"transactions\")$/", "language": "Python", "kind": "variable", "scope": "TransactionORM", "scopeKind": "class"}, {"_type": "tag", "name": "user_id", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    user_id = Column(String, ForeignKey(\"users.user_id\"), nullable=False, index=True)$/", "language": "Python", "kind": "variable", "scope": "TransactionORM", "scopeKind": "class"}, {"_type": "tag", "name": "user_id", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    user_id = Column(String, primary_key=True, default=lambda: str(uuid.uuid4()), unique=True, i/", "language": "Python", "kind": "variable", "scope": "UserORM", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/db.py", "pattern": "/^    username = Column(String, unique=True, index=True, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "UserORM", "scopeKind": "class"}], "hash": "0d4ffa0b38b4ab242fc1636a99233c6b", "format-version": 4, "code-base-name": "finance_tracker_backend", "filename": "finance_tracker_backend/src/api/db.py", "fields": [{"name": "Base = declarative_base()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DATABASE_URL = os.environ.get(\"DATABASE_URL\", \"sqlite:\\/\\/\\/.\\/finance_tracker.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "__tablename__ = \"transactions\"", "scope": "TransactionORM", "scopeKind": "class", "description": "unavailable"}, {"name": "__tablename__ = \"users\"", "scope": "UserORM", "scopeKind": "class", "description": "unavailable"}, {"name": "amount = Column(Float, nullable=False)", "scope": "TransactionORM", "scopeKind": "class", "description": "unavailable"}, {"name": "category = Column(String, nullable=False)", "scope": "TransactionORM", "scopeKind": "class", "description": "unavailable"}, {"name": "currency = Column(String, nullable=False)", "scope": "TransactionORM", "scopeKind": "class", "description": "unavailable"}, {"name": "date = Column(DateTime, nullable=False)", "scope": "TransactionORM", "scopeKind": "class", "description": "unavailable"}, {"name": "description = Column(String, nullable=True)", "scope": "TransactionORM", "scopeKind": "class", "description": "unavailable"}, {"name": "email = Column(String, unique=True, index=True, nullable=False)", "scope": "UserORM", "scopeKind": "class", "description": "unavailable"}, {"name": "engine = create_engine(DATABASE_URL, connect_args={\"check_same_thread\": False} if DATABASE_URL.s/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "hashed_password = Column(String, nullable=False)", "scope": "UserORM", "scopeKind": "class", "description": "unavailable"}, {"name": "id = Column(String, primary_key=True, default=lambda: str(uuid.uuid4()), unique=True, index=/", "scope": "TransactionORM", "scopeKind": "class", "description": "unavailable"}, {"name": "transactions = relationship(\"TransactionORM\", back_populates=\"user\", cascade=\"all, delete-or/", "scope": "UserORM", "scopeKind": "class", "description": "unavailable"}, {"name": "type = Column(String, nullable=False)  # \"income\" or \"expense\"", "scope": "TransactionORM", "scopeKind": "class", "description": "unavailable"}, {"name": "user = relationship(\"UserORM\", back_populates=\"transactions\")", "scope": "TransactionORM", "scopeKind": "class", "description": "unavailable"}, {"name": "user_id = Column(String, ForeignKey(\"users.user_id\"), nullable=False, index=True)", "scope": "TransactionORM", "scopeKind": "class", "description": "unavailable"}, {"name": "user_id = Column(String, primary_key=True, default=lambda: str(uuid.uuid4()), unique=True, i/", "scope": "UserORM", "scopeKind": "class", "description": "unavailable"}, {"name": "username = Column(String, unique=True, index=True, nullable=False)", "scope": "UserORM", "scopeKind": "class", "description": "unavailable"}]}