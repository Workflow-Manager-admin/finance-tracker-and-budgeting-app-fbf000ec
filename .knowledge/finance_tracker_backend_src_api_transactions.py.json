{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for managing financial transactions within a finance tracking application. It includes models (using Pydantic), route handlers for CRUD operations on transactions, and endpoints for dashboard and budget analytics, all conforming to REST principles and leveraging FastAPI. It also manages categorized budget data and provides endpoints for retrieving transaction summaries, recent activity, and analytics.", "external_files": ["./auth", "./db"], "external_methods": ["get_current_user", "get_db"], "published": ["list_transactions", "create_transaction", "get_transaction", "update_transaction_put", "update_transaction_patch", "delete_transaction", "dashboard_recent", "categories_summary", "analytics_budget"], "classes": [{"name": "TransactionBase", "description": "Base model for transaction data input, with fields for amount, currency, category, type, date, and optional description."}, {"name": "TransactionCreate", "description": "Model for creating a new transaction, inherits from TransactionBase."}, {"name": "TransactionUpdate", "description": "Model for full update of a transaction, inherits from TransactionBase."}, {"name": "TransactionPartialUpdate", "description": "Model for partial updates of a transaction, with optional fields."}, {"name": "Transaction", "description": "Model representing a transaction with all fields including id and user_id for API responses."}, {"name": "TransactionListResponse", "description": "Response model for listing transactions, includes list of Transaction and total count."}, {"name": "CategorySummaryItem", "description": "Represents total spent per category."}, {"name": "CategorySummaryResponse", "description": "Response containing list of category summaries."}, {"name": "CategoryBreakdownItem", "description": "Details of spent and budgeted amounts per category for analytics."}, {"name": "BudgetAnalyticsResponse", "description": "Aggregated budget vs. spending data including category breakdown."}, {"name": "DashboardRecentResponse", "description": "Contains recent transactions for dashboard display."}], "methods": [{"name": "Transaction orm_to_transaction(tx: TransactionORM)", "description": "Converts an ORM Transaction object into a Pydantic Transaction model.", "scope": "", "scopeKind": ""}, {"name": "analytics_budget( current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "categories_summary( current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "create_transaction( tx_create: TransactionCreate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "dashboard_recent( count: int = Query(5, ge=1, le=20), current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "delete_transaction( transaction_id: str, current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "get_transaction( transaction_id: str, current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "list_transactions( limit: int = Query(20, ge=1, le=100), offset: int = Query(0, ge=0), current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "update_transaction_patch( transaction_id: str, tx_pupdate: TransactionPartialUpdate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "update_transaction_put( transaction_id: str, tx_update: TransactionUpdate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["db.query(TransactionORM)", "db.add(tx_orm)", "db.commit()", "db.refresh(tx_orm)", "db.delete(tx_orm)"], "search-terms": ["transactions API", "budget analytics", "transaction CRUD", "categories summary", "dashboard recent", "FastAPI transactions"], "state": 2, "file_id": 14, "knowledge_revision": 43, "git_revision": "d2dbe8d7cbeb0c0957210cd6feaa2abfb0077041", "revision_history": [{"29": ""}, {"31": "08c2a588b3aecd57abe309f6af85fe56197ea6f2"}, {"37": "08c2a588b3aecd57abe309f6af85fe56197ea6f2"}, {"42": "08c2a588b3aecd57abe309f6af85fe56197ea6f2"}, {"43": "d2dbe8d7cbeb0c0957210cd6feaa2abfb0077041"}], "ctags": [{"_type": "tag", "name": "BudgetAnalyticsResponse", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^class BudgetAnalyticsResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "CategoryBreakdownItem", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^class CategoryBreakdownItem(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "CategorySummaryItem", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^class CategorySummaryItem(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "CategorySummaryResponse", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^class CategorySummaryResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DEFAULT_TOTAL_BUDGET", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^DEFAULT_TOTAL_BUDGET = 500$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DashboardRecentResponse", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^class DashboardRecentResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Transaction", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^class Transaction(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TransactionBase", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^class TransactionBase(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TransactionCreate", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^class TransactionCreate(TransactionBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TransactionListResponse", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^class TransactionListResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TransactionPartialUpdate", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^class TransactionPartialUpdate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TransactionUpdate", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^class TransactionUpdate(TransactionBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "amount", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^    amount: float = Field(..., description=\"Amount of the transaction\")$/", "language": "Python", "typeref": "typename:float", "kind": "variable", "scope": "TransactionBase", "scopeKind": "class"}, {"_type": "tag", "name": "analytics_budget", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^async def analytics_budget($/", "language": "Python", "kind": "function", "signature": "( current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "categories_summary", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^async def categories_summary($/", "language": "Python", "kind": "function", "signature": "( current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "category", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^    category: str = Field(..., description=\"Category name, e.g. 'Food'\", example=\"Food\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TransactionBase", "scopeKind": "class"}, {"_type": "tag", "name": "category_budgets", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^category_budgets = {$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_transaction", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^async def create_transaction($/", "language": "Python", "kind": "function", "signature": "( tx_create: TransactionCreate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "currency", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^    currency: str = Field(..., description=\"Currency code, e.g. 'USD'\", example=\"USD\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TransactionBase", "scopeKind": "class"}, {"_type": "tag", "name": "dashboard_recent", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^async def dashboard_recent($/", "language": "Python", "kind": "function", "signature": "( count: int = Query(5, ge=1, le=20), current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "date", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^    date: datetime = Field(..., description=\"Datetime of the transaction\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "TransactionBase", "scopeKind": "class"}, {"_type": "tag", "name": "delete_transaction", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^async def delete_transaction($/", "language": "Python", "kind": "function", "signature": "( transaction_id: str, current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^    description: Optional[str] = Field(None, description=\"Transaction description\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "TransactionBase", "scopeKind": "class"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^    description: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "Transaction", "scopeKind": "class"}, {"_type": "tag", "name": "get_transaction", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^async def get_transaction($/", "language": "Python", "kind": "function", "signature": "( transaction_id: str, current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^    id: str = Field(..., description=\"Transaction ID\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Transaction", "scopeKind": "class"}, {"_type": "tag", "name": "list_transactions", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^async def list_transactions($/", "language": "Python", "kind": "function", "signature": "( limit: int = Query(20, ge=1, le=100), offset: int = Query(0, ge=0), current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "orm_to_transaction", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^def orm_to_transaction(tx: TransactionORM) -> Transaction:$/", "language": "Python", "typeref": "typename:Transaction", "kind": "function", "signature": "(tx: TransactionORM)"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^router = APIRouter(tags=[\"Transactions\", \"Dashboard\", \"Categories\", \"Analytics\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "type", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^    type: str = Field(..., description=\"Transaction type ('income' or 'expense')\", example=\"expe/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TransactionBase", "scopeKind": "class"}, {"_type": "tag", "name": "update_transaction_patch", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^async def update_transaction_patch($/", "language": "Python", "kind": "function", "signature": "( transaction_id: str, tx_pupdate: TransactionPartialUpdate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "update_transaction_put", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^async def update_transaction_put($/", "language": "Python", "kind": "function", "signature": "( transaction_id: str, tx_update: TransactionUpdate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "user_id", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-fbf000ec/finance_tracker_backend/src/api/transactions.py", "pattern": "/^    user_id: str = Field(..., description=\"User ID transaction belongs to\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Transaction", "scopeKind": "class"}], "hash": "356db938f1892715cb81ac4c1fdabb10", "format-version": 4, "code-base-name": "finance_tracker_backend", "filename": "finance_tracker_backend/src/api/transactions.py", "fields": [{"name": "DEFAULT_TOTAL_BUDGET = 500", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "float amount", "scope": "TransactionBase", "scopeKind": "class", "description": "unavailable"}, {"name": "str category", "scope": "TransactionBase", "scopeKind": "class", "description": "unavailable"}, {"name": "category_budgets = {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str currency", "scope": "TransactionBase", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime date", "scope": "TransactionBase", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] description", "scope": "TransactionBase", "scopeKind": "class", "description": "unavailable"}, {"name": "str id", "scope": "Transaction", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter(tags=[\"Transactions\", \"Dashboard\", \"Categories\", \"Analytics\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str type", "scope": "TransactionBase", "scopeKind": "class", "description": "unavailable"}, {"name": "str user_id", "scope": "Transaction", "scopeKind": "class", "description": "unavailable"}]}